$> npm init
$> npm init -y

$> npm run namaprojectdiscript

Install ExpressJS
$> npm install express

AGar ketika edit autorestart install "nodemon"
$> npm install nodemon

Install koneksi ke mySQL

$> npm i mysql

npm i body-parser
npm i dotenv
npm i express
npm i mysql
npm i nodemon --save-dev
npm i cors

npm i express
npm i mysql
npm i nodemon
npm i cors

Untuk menginstal Express sementara dan tidak menambahkannya ke daftar dependensi:
$> npm install express --no-save

- buat 1 buah file dengan nama server-api.js
- Masukan script dibawah ini :
const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})

- Lanjut, kita edit pada file package.json pada bagian script, perhatikan
  "scripts": {
    "api-service":"nodemon server-api.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

- Lanjut, Masuk lagi ke terminal lalu jalankan perintah dibawah ini untuk running :
> npm run api-service

- Lanjut buka di browser :
http://localhost:3000


=========== PM2 =======================

pm2 start index.js --name api-service

Buat atau edit file ecosystem.config.js di direktori root proyek Anda.
Tambahkan konfigurasi aplikasi beserta versi aplikasi.

module.exports = {
  apps: [
    {
      name: 'api-service',
      script: './index.js',
      watch: true,
      env: {
        NODE_ENV: 'development'
      },
      env_production: {
        NODE_ENV: 'production'
      },
      version: '1.0.0' // Versi aplikasi
    }
  ]
};

pm2 start ecosystem.config.js
pm2 update
pm2 list
pm2 info api-service

pm2 start index.js --name api-service --env production
pm2 restart api-service --update-env


=========================== PUDIN.MY.ID =======================
