//Membuat otomatis kirim pesan, pada contoh ini mengirimkan selamat ulang tahun.

$> npm init -y
$> npm install express mysql2 axios
$> npm install node-cron

1. Buat file config.js Untuk Konfigurasi database
==================================================
module.exports = {
    host: 'localhost',
    user: 'your_db_user',
    password: 'your_db_password',
    database: 'your_db_name'
};


2. Buat Koneksi database db.js
===============================
const mysql = require('mysql2');
const config = require('./config');

const connection = mysql.createConnection({
    host: config.host,
    user: config.user,
    password: config.password,
    database: config.database
});

connection.connect((err) => {
    if (err) throw err;
    console.log('Connected to the MySQL server.');
});

module.exports = connection;

3. sendBirthdayMessage.js: Logika untuk memeriksa ulang tahun dan mengirim pesan
================================================================================
const axios = require('axios');
const db = require('./db');

async function sendBirthdayMessages() {
    const today = new Date();
    const month = today.getMonth() + 1; // January is 0!
    const day = today.getDate();

    const query = `SELECT * FROM users WHERE MONTH(tanggal_lahir) = ? AND DAY(tanggal_lahir) = ? AND status_aktif = 1`;

    db.query(query, [month, day], (err, results) => {
        if (err) throw err;

        results.forEach(user => {
            sendWhatsAppMessage(user)
                .then(response => console.log(`Message sent to ${user.nama_lengkap}`))
                .catch(error => console.error(`Failed to send message to ${user.nama_lengkap}: ${error}`));
        });
    });
}

async function sendWhatsAppMessage(user) {
    const message = `Selamat Ulang Tahun, ${user.nama_lengkap}!`;
    const apiUrl = 'https://api.whatsapp.com/send'; // Gantilah dengan URL API WhatsApp yang Anda gunakan

    // Kirim pesan menggunakan axios
    return axios.post(apiUrl, {
        phone: user.phone, // Gantilah dengan field yang menyimpan nomor telepon
        message: message
    });
}

module.exports = sendBirthdayMessages;

4. app.js: File utama untuk aplikasi Express
=============================================

const express = require('express');
const cron = require('node-cron');
const sendBirthdayMessages = require('./sendBirthdayMessage');

const app = express();
const PORT = process.env.PORT || 3000;

app.get('/', (req, res) => {
    res.send('Birthday message sender running');
});

// Endpoint untuk memeriksa dan mengirim pesan ulang tahun
app.get('/send-birthday-messages', (req, res) => {
    sendBirthdayMessages();
    res.send('Birthday messages check initiated');
});

// Menjadwalkan tugas untuk berjalan setiap hari pada jam 07:00 waktu Asia/Jakarta
cron.schedule('0 7 * * *', () => {
    console.log('Running a job at 07:00 at Asia/Jakarta timezone');
    sendBirthdayMessages();
}, {
    scheduled: true,
    timezone: "Asia/Jakarta"
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});



======================================= PUDIN.MY.ID ==============================================
