Install nodeJS LTS

$> node namafile.js

$> npm init
$> npm init -y

$> npm run namaprojectdiscript

Install ExpressJS
$> npm install express

AGar ketika edit autorestart install "nodemon"
$> npm install nodemon

Install koneksi ke mySQL

$> npm i mysql

npm i body-parser
npm i dotenv
npm i express
npm i mysql
npm i nodemon

=================
> npm i body-parser cookie-parser ejs express express-ejs-layouts express-session multer
> npm i -D nodemon

> npm i express ejs body-parser express-ejs-layouts multer path
> npm i express ejs body-parser express-ejs-layouts multer path bcrypt cookie-parser dotenv express-flash express-session validator





===============================
AGAR BISA BERJALAN DI BACKEND
$> npm install pm2 -g
$> pm2 start index.js
$> pm2 start index.js --env production

$> pm2 start server/index.js --name api-data
$> pm2 stop api-data

$> pm2 start index.js --env production --name api-data

$> pm2 start server/index.js --name uptime-kuma --port=8888 (ganti port )

// Perintah dilinux agar app running setelah restart server
$> pm2 startup

$> pm2 stop all


Runtime Edition

        PM2 is a Production Process Manager for Node.js applications
                     with a built-in Load Balancer.

                Start and Daemonize any application:
                $ pm2 start app.js

                Load Balance 4 instances of api.js:
                $ pm2 start api.js -i 4

                Monitor in production:
                $ pm2 monitor

                Make pm2 auto-boot at server restart:
                $ pm2 startup

                To go further checkout:
                http://pm2.io/

MONITORING WEB
http://pm2.io/

MELEPAS
$> pm2 unlink


SAMPLE
=======================
index.js
- Masukan text dibawah ini :

const http = require('http');
const hostname = 'IPADDRESS';
const port = 4000;
const server = http.createServer((req, res) => {
res.statusCode = 200;
 res.setHeader('Content-Type', 'text/plain');
 res.end('This is a test from nodjs app.js!\n');
});
server.listen(port, hostname, () => {
 console.log(`Server running at http://${hostname}:${port}/`);
});


NSOLID
======
2024-10-01 14:14:24 - To install Node.js, run: apt-get install nodejs -y
2024-10-01 14:14:24 - You can use N|solid Runtime as a node.js alternative
2024-10-01 14:14:24 - To install N|solid Runtime, run: apt-get install nsolid -y

PM2 : cocok untuk pengelolaan aplikasi Node.js secara sederhana dan efisien, terutama bagi developer individu atau tim kecil yang ingin menjaga performa dan stabilitas.
N|Solid : lebih fokus pada enterprise yang membutuhkan solusi keamanan dan performa tingkat lanjut, dengan kemampuan observabilitas dan pengelolaan yang lebih kuat.




================================ PUDIN.MY.ID ================================================
